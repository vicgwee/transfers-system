// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: transaction.sql

package db

import (
	"context"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transactions (
    source_account_id,
    destination_account_id,
    amount
) VALUES (
  $1, $2, $3
) RETURNING id, source_account_id, destination_account_id, amount, created_at
`

type CreateTransactionParams struct {
	SourceAccountID      int64  `json:"source_account_id"`
	DestinationAccountID int64  `json:"destination_account_id"`
	Amount               string `json:"amount"`
}

func (q *Queries) CreateTransaction(ctx context.Context, arg *CreateTransactionParams) (*Transaction, error) {
	row := q.db.QueryRow(ctx, createTransaction, arg.SourceAccountID, arg.DestinationAccountID, arg.Amount)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.SourceAccountID,
		&i.DestinationAccountID,
		&i.Amount,
		&i.CreatedAt,
	)
	return &i, err
}

const deleteAllTransactions = `-- name: DeleteAllTransactions :exec
DELETE FROM transactions
`

func (q *Queries) DeleteAllTransactions(ctx context.Context) error {
	_, err := q.db.Exec(ctx, deleteAllTransactions)
	return err
}
